#+EXPORT_EXCLUDE_TAGS:  noexport
#+AUTHOR:               Malcolm Sparks
#+EMAIL:                malcolm@juxt.pro
#+LANGUAGE:             en
#+OPTIONS:              toc:nil
#+OPTIONS:              reveal_center:t reveal_progress:t reveal_history:t reveal_control:t
#+OPTIONS:              reveal_mathjax:nil reveal_rolling_links:nil reveal_keyboard:t reveal_overview:t num:nil
#+OPTIONS:              width:1680 height:1050
#+REVEAL_HLEVEL:        1
#+REVEAL_MARGIN:        0.0
#+REVEAL_MIN_SCALE:     1.0
#+REVEAL_MAX_SCALE:     1.4
#+REVEAL_THEME:         black
#+REVEAL_TRANS:         fade
#+REVEAL_SPEED:         fast
#+REVEAL_ROOT:          static
#+REVEAL_PLUGINS: (highlight markdown notes)
#+TITLE:                HTTP Resources as Data

* more js code

#+BEGIN_SRC javascript
function linkify( selector ) {
  if( supports3DTransforms ) {

    var nodes = document.querySelectorAll( selector );

    for( var i = 0, len = nodes.length; i < len; i++ ) {
      var node = nodes[i];

      if( !node.className ) {
        node.className += ' roll';
      }
    }
  }
}
#+END_SRC

* js code

#+BEGIN_SRC javascript
    if( window.location.search.match( /print-pdf/gi ) ) {
        var link = document.createElement( 'link' );
        link.rel = 'stylesheet';
        link.type = 'text/css';
        link.href = 'static/css/print/pdf.css';
        document.getElementsByTagName( 'head' )[0].appendChild( link );
    }

#+END_SRC

* Some code
  :PROPERTIES:
  :reveal_extra_attr: class="hide-heading"
  :END:

#+BEGIN_SRC clojure hljs
(defn update-routes [routes f & args]
  (postwalk
   (fn [x]
     (if (instance? Handler x)
       (apply f x args)
       x))
   routes))
#+END_SRC


* Some more code

#+BEGIN_SRC clojure hljs
(defn merge-options [other-options routes]
  (update-routes routes
                 (fn [{:keys [base options]}]
                   ;; Recreate the resource from the base, but with new options
                   (resource base (merge options other-options)))))

(defn basic-auth [realm auth-fn routes]
  (merge-options
   {:security {:type :basic :realm realm}
    :authorization auth-fn}
   routes))
#+END_SRC
